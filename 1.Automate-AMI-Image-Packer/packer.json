{
    "_comment": "Packer template for creating an AMI with Docker, Nginx, Node Exporter, and Ansible",
    "variables": {
        "region": "us-east-1",
        "source_ami": "ami-0866a3c8686eaeeba", // Base AMI (Ubuntu)
        "instance_type": "t2.micro",
        "vpc_id": "vpc-036e5c5d11bdf83de",
        "subnet_id": "subnet-05597e96c163e70fd", // a public subnet ID is used for AMI creation because the EC2 instance needs to have internet access to download necessary software packages, updates, and to interact with external services during the build process. This is especially important if you are provisioning software (e.g., Docker, Node Exporter) that requires internet access.
        "ssh_keypair_name": "your-ssh-key-name", // Ensure you have an existing SSH key pair in AWS
        "ssh_private_key_file": "{{env `SSH_PRIVATE_KEY_FILE`}}", // Reference private key path from environment variable
        "ssh_public_key": "{{env `SSH_PUBLIC_KEY`}}" // Reference public key from environment variable
    },
    "builders": [
        {
            "type": "amazon-ebs",
            "region": "{{user `region`}}",
            "source_ami": "{{user `source_ami`}}",
            "instance_type": "{{user `instance_type`}}",
            "ssh_username": "ubuntu",
            "ami_name": "DevSecOps-Ansible-Image-{{isotime | clean_resource_name}}",
            "vpc_id": "{{user `vpc_id`}}",
            "subnet_id": "{{user `subnet_id`}}",
            "ssh_keypair_name": "{{user `ssh_keypair_name`}}",
            "ssh_private_key_file": "{{user `ssh_private_key_file`}}",
            "tags": {
                "Name": "DevSecOps-Ansible-Image-{{isotime | clean_resource_name}}"
            }
        }
    ],
    "provisioners": [
        {
            "type": "shell",
            "inline": [
                "sudo useradd -m ansibleadmin --shell /bin/bash",
                "sudo mkdir -p /home/ansibleadmin/.ssh",
                "sudo chown -R ansibleadmin /home/ansibleadmin/",
                "sudo touch /home/ansibleadmin/.ssh/authorized_keys",
                "sudo usermod -aG sudo ansibleadmin",
                "echo '{{user `ssh_public_key`}}' | sudo tee /home/ansibleadmin/.ssh/authorized_keys"
            ]
        },
        {
            "type": "shell",
            "inline": [
                "sudo apt update -y",
                "curl https://get.docker.com | bash"
            ]
        },
        {
            "type": "file",
            "source": "docker.service",
            "destination": "/tmp/docker.service"
        },
        {
            "type": "shell",
            "inline": [
                "sudo cp /tmp/docker.service /lib/systemd/system/docker.service",
                "sudo systemctl daemon-reload",
                "sudo service docker restart"
            ]
        },
        {
            "type": "shell",
            "inline": [
                "sudo useradd --no-create-home --shell /bin/false node_exporter",
                "wget https://github.com/prometheus/node_exporter/releases/download/v1.3.1/node_exporter-1.3.1.linux-amd64.tar.gz",
                "tar xvf node_exporter-1.3.1.linux-amd64.tar.gz",
                "sudo cp node_exporter-1.3.1.linux-amd64/node_exporter /usr/local/bin/",
                "sudo chown node_exporter:node_exporter /usr/local/bin/node_exporter"
            ]
        },
        {
            "type": "file",
            "source": "node_exporter.service",
            "destination": "/tmp/node_exporter.service"
        },
        {
            "type": "shell",
            "inline": [
                "sudo cp /tmp/node_exporter.service /etc/systemd/system/node_exporter.service",
                "sudo systemctl enable node_exporter",
                "rm -rf node_exporter*"
            ]
        },
        {
            "type": "shell",
            "inline": [
                "sudo apt install -y unzip stress net-tools jq"
            ]
        }
    ]
}